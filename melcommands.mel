polyCylinder -r 0.5 -h 6 -sx 12 -sy 1 -sz 1 -ax 0 1 0 -rcp 0 -cuv 3 -ch 1 -n fuck1;
polyCut  -ws 1  -cd "Y" -ef 1 -eox 0.5 -eoy  0.5 -eoz  0.5 -ch 1 fuck1;
select -r fuck1;
string $f[] = polySeparate();
for ($i=0; $i<size($f)-1; $i++) {
    select -r $f[$i];
    polyCloseBorder();
}


polyCut  -ws 1  -cd "X" -ef 1 -eox 0.5 -eoy  0.5 -eoz  0.5 -ch 1 fuck1;
polyCloseBorder -ch 1 fuck1;
select -r fuck1;
polyCut  -ws 1  -cd "Y" -ef 1 -eox 0.5 -eoy  0.5 -eoz  0.5 -ch 1 fuck1;
polyCloseBorder -ch 1 fuck1;
select -r fuck1;
polyCut  -ws 1  -cd "Z" -ef 1 -eox 0.5 -eoy  0.5 -eoz  0.5 -ch 1 fuck1;
polyCloseBorder -ch 1 fuck1;
select -r fuck1;

// does not work with sphere sx & sy are even numbers why??

global proc vector faceNormal(string $face ) {
    string $res[] = `polyInfo -fn $face`;
    string $buff[];
    tokenize($res[0] ,":" , $buff);
    tokenize($buff[1] ," " , $buff);
    return unit( << float($buff[0]) , float($buff[1]) ,float($buff[2]) >>);
}

global proc float xyArea(vector $v1,vector $v2,vector $v3 ) {
    return abs((($v1.x)*(($v3.y)-($v2.y)))+(($v2.x)*(($v1.y)-($v3.y)))+(($v3.x)*(($v2.y)-($v1.y)))) *0.5;
}


global proc float prismVolume(string $triangle) {
    string $triVerts[] = `polyListComponentConversion -tv $triangle`;
    $triVerts = `ls -flatten $triVerts`;

    if (`size $triVerts` != 3) error($triangle +" is not a triangle");

    vector $v1 = `pointPosition -w $triVerts[0]`; 
    vector $v2 = `pointPosition -w $triVerts[1]`; 
    vector $v3 = `pointPosition -w $triVerts[2]`; 

    vector $normal = faceNormal( $triangle );
    float $area = xyArea( $v1, $v2, $v3 );
    float $pVolume = ((($v1.z)+($v2.z)+($v3.z))/3.0)*$area ;
    if (($normal.z) < 0) $pVolume = -$pVolume;

    return $pVolume;
}

// pick a mesh and type meshVolume();
global proc float meshVolume(string $name) {
	//select -r $name;
	//string $sel[] = `ls -sl -dag -leaf -type "mesh"`;
	string $dup[] = `duplicate -rr $name`;
	makeIdentity -apply true -t 1 -r 1 -s 1 -n 0 $dup[0]; //freeze
	polyTriangulate $dup[0];
	string $tris[] = `ls -flatten ($dup[0] +".f[*]")`;

	float $volume = 0.0;
	for ($t in $tris) $volume += prismVolume($t) ;

	delete $dup;
	return $volume;
}